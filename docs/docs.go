// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/urls": {
            "get": {
                "description": "Retrieves a paginated list of all shortened URLs in the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "urls"
                ],
                "summary": "List registered URLs",
                "parameters": [
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Page index (starting from 1)",
                        "name": "page_index",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of shortened URLs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.listURLResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid pagination parameters",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResp"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResp"
                        }
                    }
                }
            },
            "post": {
                "description": "Takes an original URL, validates it, and stores it in the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "urls"
                ],
                "summary": "Create a shortened URL",
                "parameters": [
                    {
                        "description": "Original URL request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.createShortenURLRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Shortened URL created successfully",
                        "schema": {
                            "$ref": "#/definitions/api.createShortenURLResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input or URL already exists",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResp"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResp"
                        }
                    }
                }
            }
        },
        "/api/urls/count": {
            "get": {
                "description": "Returns the total number of shortened URLs stored in the system (useful for pagination).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "urls"
                ],
                "summary": "Get total URLs",
                "responses": {
                    "200": {
                        "description": "Total number of URLs",
                        "schema": {
                            "$ref": "#/definitions/api.countURLResp"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResp"
                        }
                    }
                }
            }
        },
        "/api/urls/{id}/visitors": {
            "get": {
                "description": "Retrieves a paginated list of visitors who accessed the given shortened URL.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "visitors"
                ],
                "summary": "List visitors for a shortened URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shortened URL ID (base62 code)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "description": "Number of items per page",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Page index (starting from 1)",
                        "name": "page_index",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of visitors",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.listVisitorResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid pagination parameters",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResp"
                        }
                    },
                    "404": {
                        "description": "URL ID not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResp"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResp"
                        }
                    }
                }
            }
        },
        "/{code}": {
            "get": {
                "description": "Redirects a visitor from the shortened URL code to the original URL and records the visit.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "urls"
                ],
                "summary": "Redirect to original URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Shortened URL code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "301": {
                        "description": "Redirected successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid code or URL not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResp"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ErrorResp": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "api.countURLResp": {
            "type": "object",
            "properties": {
                "total_urls": {
                    "type": "integer"
                }
            }
        },
        "api.createShortenURLRequest": {
            "type": "object",
            "required": [
                "url"
            ],
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "api.createShortenURLResponse": {
            "type": "object",
            "properties": {
                "shorten_url": {
                    "type": "string"
                }
            }
        },
        "api.listURLResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "original": {
                    "type": "string"
                },
                "shorten": {
                    "type": "string"
                },
                "total_visitor": {
                    "type": "integer"
                }
            }
        },
        "api.listVisitorResponse": {
            "type": "object",
            "properties": {
                "ip": {
                    "type": "string"
                },
                "original": {
                    "type": "string"
                },
                "shorten": {
                    "type": "string"
                },
                "time_visited": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "URL Shortener API",
	Description:      "This is the API for URL Shortener service",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
