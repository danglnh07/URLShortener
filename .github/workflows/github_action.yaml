# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ci-test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17.5-alpine3.22
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: 123456
          POSTGRES_DB: url_shortener
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.6'

    - name: Install Postgres client
      run: sudo apt-get update && sudo apt-get install -y postgresql-client

    - name: Run database schema
      run: psql -h localhost -U root -d url_shortener -f ./db/schema/schema.sql
      env:
        PGPASSWORD: 123456

    - name: Build
      run: go build -v ./...

    - name: Test
      run: make test
      env:
        DOMAIN: localhost
        PORT: 8080
        DB_DRIVER: postgres
        DB_SOURCE: postgresql://root:123456@localhost:5432/url_shortener?sslmode=disable
        MAX_REQUEST: 100
        REFILL_RATE: 10